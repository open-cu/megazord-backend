"""
Django settings for megazord project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import logging
from pathlib import Path

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Read env
env = environ.Env(
    DEBUG=(bool, False),
    RELOAD=(bool, False),
    LOG_LEVEL=(str, "INFO"),
    SECRET_KEY=(str, "secret"),
    DEPLOY_DOMAIN=(str, "localhost"),
    DATABASE_DB=(str, "megazord"),
    DATABASE_USER=(str, "megazord_user"),
    DATABASE_PASSWORD=(str, "megazord_super_user"),
    DATABASE_HOST=(str, "localhost"),
    DATABASE_PORT=(int, 5432),
    EMAIL_HOST=(str, "smtp.gmail.com"),
    EMAIL_PORT=(int, 587),
    EMAIL_HOST_USER=(str, "email@example.org"),
    EMAIL_HOST_PASSWORD=(str, "password"),
    CONFIRMATION_CODE_TTL=(int, 2),
    TELEGRAM_BOT_TOKEN=(str, "228"),
    TELEGRAM_BOT_USERNAME=(str, "FindYourMate_bot"),
)
env.read_env(BASE_DIR.parent / ".env")

# logging
logging.basicConfig(level=logging.getLevelName(env("LOG_LEVEL")))

DEBUG = env("DEBUG")
RELOAD = env("RELOAD")

SECRET_KEY = env("SECRET_KEY")

# CORS
if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True
    ALLOWED_HOSTS = ["*"]
else:
    CORS_ALLOWED_ORIGIN_REGEXES = [r"^https?://localhost(:[0-9]{1,5})?$"]
    CORS_ALLOWED_ORIGINS = [f"https://{env("DEPLOY_DOMAIN")}"]
    ALLOWED_HOSTS = ["localhost", env("DEPLOY_DOMAIN")]

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "mail_templated",
    "corsheaders",
    "hackathons",
    "resumes",
    "teams",
    "accounts",
    "vacancies",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "megazord.middlewares.ContextRequestMiddleware",
]

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ROOT_URLCONF = "megazord.urls"

WSGI_APPLICATION = "megazord.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env("DATABASE_DB"),
        "USER": env("DATABASE_USER"),
        "PASSWORD": env("DATABASE_PASSWORD"),
        "HOST": env("DATABASE_HOST"),
        "PORT": env("DATABASE_PORT"),
    }
}

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Authorization
AUTH_USER_MODEL = "accounts.Account"

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Confirmation code TTL in minutes
CONFIRMATION_CODE_TTL = env("CONFIRMATION_CODE_TTL")

# telegram bot settings
TELEGRAM_BOT_TOKEN = env("TELEGRAM_BOT_TOKEN")
TELEGRAM_BOT_USERNAME = env("TELEGRAM_BOT_USERNAME")

# Email settings
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

EMAIL_HOST = env("EMAIL_HOST")
EMAIL_PORT = env("EMAIL_PORT")
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER
EMAIL_ADMIN = EMAIL_HOST_USER
