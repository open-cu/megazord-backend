name: Deploy

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Image tag for deploy"
        default: main
        type: string
        required: false

  workflow_call:
    inputs:
      image_tag:
        description: "Image tag for deploy"
        type: string
        required: true

jobs:
  deploy:
    runs-on: megazord_prod
    environment: prod
    permissions:
      packages: read

    env:
      BACKEND_IMAGE_TAG: ${{ inputs.image_tag }}

      DEBUG: ${{ vars.DEBUG }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEPLOY_DOMAIN: ${{ vars.DEPLOY_DOMAIN }}
      TELEGRAM_BOT_USERNAME: ${{ vars.TELEGRAM_BOT_USERNAME }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      DATABASE_USER: ${{ vars.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_DB: ${{ vars.DATABASE_DB }}

      EMAIL_HOST: ${{ vars.EMAIL_HOST }}
      EMAIL_PORT: ${{ vars.EMAIL_PORT }}
      EMAIL_HOST_USER: ${{ vars.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download docker compose
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            compose.deploy.yaml

      - name: Rename docker compose file
        run: mv compose.deploy.yaml compose.yaml

      - name: Deploy
        run: docker compose up -d --pull always

      - name: Migrate
        run: docker compose exec backend python src/manage.py migrate

      - name: Create service user
        run: docker compose exec backend python src/manage.py create_service_user ${{ vars.SERVICE_EMAIL }} ${{ secrets.SERVICE_PASSWORD }}

      - name: Cleanup
        run: docker system prune -af
