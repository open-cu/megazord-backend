version: "3.9"
name: "megazord"

services:
  backend:
    container_name: "megazord-backend"

    build:
      context: .
      dockerfile: Dockerfile

    depends_on:
      db:
        condition: service_started
    networks:
      - megazord-network

    ports:
      - "8000:8000"

    environment:
      - DEBUG=${DEBUG:-False}
      - RELOAD=True
      - SECRET_KEY=${SECRET_KEY:-secret}
      - DEPLOY_DOMAIN=${DEPLOY_DOMAIN:-localhost}

      - DATABASE_USER=${DATABASE_USER:-megazord_user}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-megazord_password}
      - DATABASE_DB=${DATABASE_DB:-megazord}
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - DATABASE_PORT=${DATABASE_PORT:-5432}

      - EMAIL_HOST=${EMAIL_HOST:?error}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:?error}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:?error}

      - CONFIRMATION_CODE_TTL=${CONFIRMATION_CODE_TTL:-2}
      - TELEGRAM_BOT_USERNAME=${TELEGRAM_BOT_USERNAME:?error}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:?error}

    volumes:
      - './src:/opt/src:ro'
      - './tests:/opt/tests:ro'

  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=${DATABASE_DB:-megazord}
      - POSTGRES_USER=${DATABASE_USER:-megazord_user}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-megazord_password}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - megazord-network

  frontend:
    container_name: "megazord-frontend"
    image: ghcr.io/open-cu/megazord-frontend:${FRONTEND_IMAGE_TAG:-main}
    ports:
      - "3000:3000"
    environment:
      - VITE_API_CLIENT=${API_URL:-http://localhost:8000/api}

#  telegram_bot:
#    container_name: "telegram-bot"
#    image: ghcr.io/open-cu/megazord-tg-bot:${TELEGRAM_BOT_IMAGE_TAG:-main}
#    environment:
#      - API_URL=${API_URL:-http://localhost:8000/api}
#      - BOT_TOKEN=${TELEGRAM_BOT_TOKEN:?error}
#      - EMAIL=${TELEGRAM_BOT_EMAIL:?error}
#      - PASSWORD=${TELEGRAM_BOT_PASSWORD:?error}

volumes:
  db-data:

networks:
  megazord-network:
